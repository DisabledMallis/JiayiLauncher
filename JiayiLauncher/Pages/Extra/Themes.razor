@page "/Themes"
@using System.Net.Http
@using JiayiLauncher.Shared.Components.Mods
@using JiayiLauncher.Utils
@using Newtonsoft.Json
@using JiayiLauncher.Shared.Components.Themes
@using static JiayiLauncher.Shared.Components.Mods.JiayiFilter
<h3>Themes</h3>

<div class="find-tools">
    <span class="material-symbols-sharp">search</span>
    <JiayiTextBox Placeholder="Search themes" @ref="_searchBox" Changed="StateHasChanged" />

    <div class="separator"></div>

    <span class="material-symbols-sharp">filter_list</span>
    <p class="filter-by">Filter by:</p>
    <JiayiFilter Changed='() => FilterChanged("dark")'>Dark</JiayiFilter>
    <JiayiFilter Changed='() => FilterChanged("light")'>Light</JiayiFilter>
    <JiayiFilter Changed='() => FilterChanged("animated")'>Animated</JiayiFilter>

    <p class="invisible-normalizer">invisible</p>
</div>

<div class="themes">
    <ul class="theme-list">
        @* TODO: Add local theme saving *@
        @* <JiayiThemeCard Theme="@localTheme" ChangeApplying="(e) => _applying = e" /> *@
        @if (themes?.Length > 0)
        {
            _searchResults = 0;
            foreach (var theme in themes)
            {
                if (raw_tags.Count > 0)
                {
                    if (!raw_tags.All(tag => theme.RawTags.Any(sourceTag => string.Equals(tag, sourceTag, StringComparison.OrdinalIgnoreCase)))) continue;
                }

                if (!theme.Name.Contains(_searchBox?.Value ?? "", StringComparison.OrdinalIgnoreCase) && !theme.Tags.Contains(_searchBox?.Value ?? "", StringComparer.OrdinalIgnoreCase) && !theme.Author.Contains(_searchBox?.Value ?? "", StringComparison.OrdinalIgnoreCase)) continue;

                _searchResults++;
                <JiayiThemeCard Theme="@theme" ChangeApplying="(e) => 
_applying = e" Applying="@_applying" />
            }
        }
    </ul>
    @if (_searchResults == 0 && themes?.Length > 0)
    {
        <p style="text-align: center; margin-top: 0;">No results found.</p>
    }
</div>

@code {
    private PublicTheme[] themes;
    /* private PublicTheme localTheme = new()
        {
            Author = "you",
            Name = "local",
        }; */


    private bool _applying = false;
    private int _searchResults;
    private List<string> raw_tags = new();
    // refs
    private JiayiTextBox? _searchBox;

    protected override async Task OnInitializedAsync()
    {
        themes = PublicTheme.GetAllThemes()!;

        await base.OnInitializedAsync();
    }

    private void FilterChanged(string raw_tag)
    {
        if (raw_tags.Contains(raw_tag))
        {
            raw_tags.Remove(raw_tag);
        }
        else
        {
            raw_tags.Add(raw_tag);
        }

        StateHasChanged();
    }
}

